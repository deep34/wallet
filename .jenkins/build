#!/usr/bin/env groovy
// Copyright (C) 2021 Edge Network Technologies Limited
// Use of this source code is governed by a GNU GPL-style license
// that can be found in the LICENSE.md file. All rights reserved.

def buildAndPushImage(registry, tag, isTestnet, blockchainApi, indexApi, explorerUrl, bridgeWalletAddress) {
  docker.withRegistry("https://$registry", registry) {
    def image = docker.build("$registry/$tag",
      "--build-arg IS_TESTNET=$isTestnet --build-arg BLOCKCHAIN_API_URL=$blockchainApi --build-arg INDEX_API_URL=$indexApi --build-arg EXPLORER_URL=$explorerUrl --build-arg BRIDGE_WALLET_ADDRESS=$bridgeWalletAddress .")
    image.push()
    return "$registry/$tag"
  }
}

pipeline {
  agent any
  stages {
    //
    // Build image
    //
    stage('Build') {
      failFast true
      parallel {
        stage('amd64') {
          agent {
            label 'arch-amd64'
          }
          steps {
            script {
              def tag = buildAndPushImage(REGISTRY, NAME, IS_TESTNET, BLOCKCHAIN_API_URL, INDEX_API_URL, EXPLORER_URL, BRIDGE_WALLET_ADDRESS)
            }
          }
        }
      }
    }
  }
  post {
    success {
      script {
        discordSend title: JOB_NAME, description: "${env.JOB_NAME} (#${env.BUILD_NUMBER}) has completed successfully", result:"SUCCESS", webhookURL: DISCORD_BUILD_WEBHOOK
      }
    }
    failure {
      script {
        discordSend title: JOB_NAME, description: "${env.JOB_NAME} (#${env.BUILD_NUMBER}) has failed", result:"FAILURE", webhookURL: DISCORD_BUILD_WEBHOOK
      }
    }
    aborted {
      script {
        discordSend title: JOB_NAME, description: "${env.JOB_NAME} (#${env.BUILD_NUMBER}) was aborted", result:"WARNING", webhookURL: DISCORD_BUILD_WEBHOOK
      }
    }
  }
}
